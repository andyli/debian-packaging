# Manpage: https://manpages.debian.org/unstable/sbuild/sbuild.conf.5.en.html

$chroot_mode = 'unshare';

$external_commands = { "build-failed-commands" => [ [ '%SBUILD_SHELL' ] ] };

push @{$unshare_mmdebstrap_extra_args}, "*", ['--aptopt=Acquire::http { Proxy "http://127.0.0.1:3142"; }'];

# Default distribution to build.
$distribution = "unstable";

# https://wiki.ubuntu.com/SimpleSbuild#Temporarily_adding_PPAs
$extra_repositories = [
    # "deb http://archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse",
    # "deb [trusted=yes] http://ppa.launchpadcontent.net/onthewings/ocaml/ubuntu jammy main",
];
# Somehow backports wouldn't be used when using the default "apt" resolver.
# https://unix.stackexchange.com/questions/298001/building-with-sbuild-and-backports
$build_dep_resolver = 'aptitude';

$build_arch_all = 1;
$build_source = 1;
$source_only_changes = 1;
$force_orig_source = 0; # set to 1 to force include the .orig.tar.gz in the .changes file

$run_lintian = 1;
$lintian_opts = ['--display-info', '--verbose', '--fail-on', 'error,warning', '--info'];

$run_autopkgtest = 1;
$autopkgtest_opts = ['--apt-upgrade', '--', 'unshare', '--release', '%r', '--arch', '%a' ];

$run_piuparts = 1;
$piuparts_opts = ['--no-eatmydata', '--distribution=%r', '--fake-essential-packages=systemd-sysv'];

# When to purge the build directory afterwards; possible values are "never",
# "successful", and "always".  "always" is the default. It can be helpful
# to preserve failing builds for debugging purposes.  Switch these comments
# if you want to preserve even successful builds, and then use
# "schroot -e --all-sessions" to clean them up manually.
$purge_build_directory = 'successful';
$purge_session = 'successful';
$purge_build_deps = 'successful';

# Directory for writing build logs to
$log_dir="/workspace/logs";
